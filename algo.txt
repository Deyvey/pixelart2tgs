PosType = tuple[int, int]
ColorType = tuple[int, int, int, int]

ShapeType = frozenset[PosType]
FrameShapesType = defaultdict[ShapeType, set[FormPosColor]]

AnimationShapesType = dict[ShapeType, list[set[FormPosColor]]]

FramesType = list[Optional[FormPosColor]]


FormPosColor(dataclass):
    position: PosType
    color: ColorType

Chain:
    frames: FramesType


dict[
    set[position],          # shape type
    list[                   # frame list
        set[                # form set in frame list
            FormPosColor    # position and color form
        ]
    ]
]



iter (shape, frames in animation)
    iter (start_frame in frames)
        while (start_frame not empty)
            create chain_variants_list

            iter (start_form in start_frame)
                init chain_variant
                iter (current_frame in frames[start:])
                    choose optimal chain next_element
                add chain_variant into chain_variants_list
            
            pick best chain_variant from chain_variants_list
            delete chain_variant elements from animation
            write chain_variant into final_structure
    

final_structure = list[Chain]

